.TH "src/dcrud/Cache.h" 3 "Mon Nov 16 2015" "Version 0.0.0" "dcrud" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/dcrud/Cache.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <dcrud/IRepositoryFactory\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "dcrudIRepository \fBdcrudCache_init\fP (const char *topic, \fBdcrudShareableFactory\fP factory, dcrudIRepositoryFactory network)"
.br
.ti -1c
.RI "void \fBdcrudCache_updateFromNetwork\fP (dcrudShareable item)"
.br
.ti -1c
.RI "void \fBdcrudCache_deleteFromNetwork\fP (dcrudGUID id)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void dcrudCache_deleteFromNetwork (dcrudGUIDid)"

.SS "dcrudIRepository dcrudCache_init (const char *topic, \fBdcrudShareableFactory\fPfactory, dcrudIRepositoryFactorynetwork)"

.PP
Definition at line 30 of file Cache\&.c\&.
.PP
.nf
34 {
35    Cache * cache;
36    if( caches == NULL ) {
37       caches = collList_reserve();
38    }
39    cache = (Cache *)malloc( sizeof( Cache ) );
40    collList_add( caches, cache );
41    cache->updated  = collSet_reserve((collComparator)shareableComparator );
42    cache->deleted  = collSet_reserve((collComparator)shareableComparator );
43    cache->toUpdate = collSet_reserve((collComparator)shareableComparator );
44    cache->toDelete = collSet_reserve((collComparator)dcrudGUID_compareTo );
45    cache->local    = collMap_reserve((collComparator)dcrudGUID_compareTo );
46    strncpy( cache->topic, topic, sizeof( cache->topic ));
47    cache->factory  = factory;
48    cache->network  = network;
49    cache->lastInstanceId = 0;
50    return (dcrudIRepository)cache;
51 }
.fi
.SS "void dcrudCache_updateFromNetwork (dcrudShareableitem)"

.SH "Author"
.PP 
Generated automatically by Doxygen for dcrud from the source code\&.
